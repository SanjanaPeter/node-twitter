{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core';\nimport Layout from '../components/layout/layout';\nimport styles from './../static/styles/index';\nimport fetchApi from './../helper/fetchApi';\nimport fetch from 'isomorphic-unfetch';\nimport { API_DOMAIN, HTTP_METHOD_POST, API_SIGN_IN } from './../config/config';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Router from 'next/router';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  _createClass(Index, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var req = _ref.req,\n          res = _ref.res;\n      var data = {};\n      return data;\n    }\n  }]);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCheckBox\", function (e) {\n      _this.setState({\n        signInRememberMe: !_this.state.signInRememberMe\n      });\n    });\n\n    _this.state = {\n      email: null,\n      password: null,\n      signInRememberMe: false,\n      email_error_text: '',\n      email_erro: false,\n      password_error: false,\n      password_error_text: ''\n    };\n    _this.handleSignIn = _this.handleSignIn.bind(_assertThisInitialized(_this)); //this.handleChange = this.handleChange.bind(this);\n\n    _this.handleCheckBox = _this.handleCheckBox.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"handleSignIn\",\n    value: function () {\n      var _handleSignIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var email, password, apiUrl, obj, result, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"Sign In Button Clicked!!\");\n                console.log(this.state);\n                email = this.state.email;\n                password = this.state.password;\n\n                if (!(email != \"\" && password != \"\")) {\n                  _context.next = 12;\n                  break;\n                }\n\n                apiUrl = API_DOMAIN + API_SIGN_IN;\n                obj = {\n                  email: email,\n                  password: password\n                };\n                _context.next = 10;\n                return fetchApi.fetchApiClientSide(apiUrl, HTTP_METHOD_POST, obj);\n\n              case 10:\n                result = _context.sent;\n\n                if (result.status != 200) {\n                  this.setState({\n                    email_error_text: \"Wrong credentials\",\n                    email_error: true,\n                    password_error_text: \"Wrong credentials\",\n                    password_error: true\n                  });\n                } else {\n                  data = result.data;\n                  Router.push('/profile/' + data._id);\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSignIn(_x) {\n        return _handleSignIn.apply(this, arguments);\n      }\n\n      return handleSignIn;\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, event) {\n      var _this$setState;\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, name, event.target.value), _defineProperty(_this$setState, \"email_error\", false), _defineProperty(_this$setState, \"password_error\", false), _defineProperty(_this$setState, \"email_error_text\", ''), _defineProperty(_this$setState, \"password_error_text\", ''), _this$setState));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Container, {\n        component: \"main\",\n        maxWidth: \"xs\"\n      }, /*#__PURE__*/React.createElement(CssBaseline, null), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.paper\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        className: classes.avatar\n      }, /*#__PURE__*/React.createElement(LockOutlinedIcon, null)), /*#__PURE__*/React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\"\n      }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        onChange: this.handleChange.bind(this, \"email\"),\n        error: this.state.email_error\n      }), /*#__PURE__*/React.createElement(FormHelperText, {\n        id: \"component-error-text\"\n      }, this.state.email_error_text), /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        helperText: this.state.password_error_text,\n        onChange: this.handleChange.bind(this, \"password\"),\n        error: this.state.password_error\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          value: \"remember\",\n          color: \"primary\"\n        }),\n        label: \"Remember me\",\n        onChange: this.handleCheckBox\n      }), /*#__PURE__*/React.createElement(Button // type=\"submit\"\n      , {\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        onClick: this.handleSignIn\n      }, \"Sign In\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true\n      }, /*#__PURE__*/React.createElement(Link, {\n        href: \"#\",\n        variant: \"body2\"\n      }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true\n      }, /*#__PURE__*/React.createElement(Link, {\n        href: \"/signup\",\n        variant: \"body2\"\n      }, \"Don't have an account? Sign Up\")))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default withStyles(styles)(Index);","map":null,"metadata":{},"sourceType":"module"}